#!/bin/sh
# XMLAda package build script (written by zhu.qunying@gmail.com)
# Copyright 2012,2015, Zhu Qun-Ying
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=xmlada
VERSION=${VERSION:-2015}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
SRC_NAME=$PRGNAM-gpl-$VERSION-src

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *) ARCH=$(uname -m) ;;
  esac
  export ARCH
fi

CWD=$(pwd)
TMP=${TMP:-"/tmp/SBo"}
PKG=${TMP}/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
  LIB_ARCH=i386
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686"
  LIBDIRSUFFIX=""
  LIB_ARCH=i386
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX="64"
  LIB_ARCH=amd64
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
  LIB_ARCH=$ARCH
fi

set -e # Exit on most errors

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRC_NAME
tar xvf $CWD/$SRC_NAME.tar.gz || tar xvf $CWD/949752df2432aed8d06c48d57cea71f38d0517cc

cd $SRC_NAME
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \; || exit 1

echo "Copy Makefile.SlackBuild"
cp $CWD/Makefile.SlackBuild .
echo "Create dummy function for compilation"
XMLADA_MODULES=(unicode input_sources sax dom schema)
for idx in ${!XMLADA_MODULES[*]} ; do
    submodule=${XMLADA_MODULES[$idx]}
    (cd $submodule; \
	grep --no-filename ^package $submodule-*ads | \
	awk '{print "with " $2 ";"}' | sort > dummy_${submodule}.adb
    cat << EOF >> dummy_${submodule}.adb
procedure dummy_$submodule is
begin
   null;
end dummy_$submodule;
EOF
)
done

PREFIX=/usr
LIBDIR=$PREFIX/lib$LIBDIRSUFFIX

echo "Start to build"
make -f Makefile.SlackBuild EXTRA_FLAGS="$SLKCFLAGS" PREFIX=/usr \
    #LIBSUFFIX=${LIBDIRSUFFIX}

echo "Build HTML documents"
make -C docs html

echo "Create project file for XMLAda"
# project files
mkdir -p $PKG/$LIBDIR/gnat
cp $CWD/xmlada.gpr $PKG/$LIBDIR/gnat
submodule=""
gpr_module=""

for idx in ${!XMLADA_MODULES[*]} ; do
    submodule=${XMLADA_MODULES[$idx]}
    if [ "$submodule" == "input_sources" ]; then
	gpr_module="input"
    else
	gpr_module="$submodule"
    fi
    mkdir -p $PKG/$PREFIX/include/xmlada/$gpr_module
    mkdir -p $PKG/$LIBDIR/xmlada/$gpr_module/relocatable
    mkdir -p $PKG/$LIBDIR/xmlada/$gpr_module/static
    install $submodule/*ads $submodule/*adb $PKG/usr/include/xmlada/$gpr_module
    rm $PKG/usr/include/xmlada/$gpr_module/dummy_*.adb
    install $submodule/lib/static/libxmlada_$submodule.a \
	    $PKG/$LIBDIR/xmlada/$gpr_module/static
    install $submodule/obj/static/*ali \
	    $PKG/$LIBDIR/xmlada/$gpr_module/static
    cp -a $submodule/lib/relocatable/* \
	    $PKG/$LIBDIR/xmlada/$gpr_module/relocatable
    install $submodule/obj/relocatable/*ali \
	    $PKG/$LIBDIR/xmlada/$gpr_module/relocatable
    (cd $PKG/$LIBDIR;
     for file in xmlada/$gpr_module/relocatable/libxmlada_$submodule* ; do
	 ln -sf $file
     done)
    submodule_file=$PKG/$LIBDIR/gnat/xmlada_${gpr_module}.gpr
    sed -e "s/@module@/$gpr_module/" \
	-e "s/@lib_name@/${submodule}/" $CWD/xmlada_module.gpr > $submodule_file
    case "$gpr_module" in
    "input")
	sed -i 's/-- with/with "xmlada_unicode";/' $submodule_file
	;;
    "sax")
	sed -i 's/-- with/with "xmlada_input";/' $submodule_file
	;;
    "dom")
	sed -i 's/-- with/with "xmlada_sax";/' $submodule_file
	;;
    "schema")
	sed -i 's/-- with/with "xmlada_dom";/' $submodule_file
	;;
    *)
	;;
    esac
done

# gps related
mkdir -p $PKG/usr/share/gps/plug-ins
sed "s/@version@/$VERSION/" $CWD/xmlada_gps.xml > \
    $PKG/usr/share/gps/plug-ins/xmlada_gps.xml
# xmlada-config
mkdir -p $PKG/usr/bin
#patch -p1 < $CWD/xmlada-config.in.patch
sed -e 's|@exec_prefix@|/usr|' \
    -e "s|@libdir@|${LIBDIR}/xmlada|" \
    -e 's|@includedir@|/usr/include/xmlada|' \
    -e 's|@DEFAULT_LIBRARY_TYPE@|static|' \
    -e "s|@PACKAGE_VERSION@|${VERSION}|" xmlada-config.in > \
$PKG/usr/bin/xmlada-config
chmod +x $PKG/usr/bin/xmlada-config

mkdir -p $PKG/usr/doc/$PRGNAM-${VERSION}
cp $CWD/$PRGNAM.SlackBuild $PKG/usr/doc/$PRGNAM-${VERSION}
cp README TODO COPYING3 AUTHORS features* known-problems* \
    $PKG/usr/doc/$PRGNAM-${VERSION}
cp -a docs/_build/html $PKG/usr/doc/$PRGNAM-${VERSION}

mkdir -p $PKG/install
cp $CWD/slack-desc $PKG/install

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-${VERSION}-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

