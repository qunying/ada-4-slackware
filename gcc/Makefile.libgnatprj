# Makefile for libgnatprj.
#   Copyright (c) 2006 Ludovic Brenta <ludovic@ludovic-brenta.org>
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

# Default target; must be first.
all: libgnatprj

.SUFFIXES:

CPUS := $(shell getconf _NPROCESSORS_ONLN)
LIB_VERSION := $(strip $(shell grep ' Library_Version :' \
                 $(srcdir)/../gcc/ada/gnatvsn.ads | \
	         sed -e 's/.*"\(.*\)".*/\1/'))
GCC:=../gcc/xgcc -B../gcc/
LIBGNAT_JUST_BUILT := -nostdinc -I../gcc/ada/rts
LIBGNATVSN := -I../libgnatvsn
CFLAGS := -g -O2
ADAFLAGS := -g -O2 -gnatn
BASEVER := $(shell cat $(srcdir)/../gcc/BASE-VER)
DEVPHASE := $(shell cat $(srcdir)/../gcc/DEV-PHASE)
DATESTAMP := $(shell cat $(srcdir)/../gcc/DATESTAMP)
INSTALL = /usr/bin/ginstall -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644

TOOLS_TARGET_PAIRS := mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb     indepsw.adb<indepsw-gnu.adb

LN_S := ln -s

ifneq (${build},${host})
   CFLAGS += -b ${host}
endif

.PHONY: libgnatprj install
libgnatprj: libgnatprj.so.$(LIB_VERSION) libgnatprj.a
#libgnatprj: libgnatprj.a

# Here we list one file per Ada unit: the body file if the unit has a
# body, the spec file otherwise.
PRJ_SOURCES := ali.adb ali-util.adb butil.adb binderr.adb errout.adb \
erroutc.adb errutil.adb err_vars.ads fname-uf.adb fmap.adb impunit.adb \
lib-util.adb makeutl.adb mlib.adb mlib-fil.adb mlib-tgt.adb \
mlib-tgt-specific.adb mlib-utl.adb osint.adb osint-c.adb prj.adb prj-attr.adb \
prj-attr-pm.adb prj-com.ads prj-conf.adb prj-dect.adb prj-env.adb prj-err.adb \
prj-ext.adb prj-nmsc.adb prj-pars.adb prj-part.adb prj-pp.adb prj-proc.adb \
prj-strt.adb prj-tree.adb prj-util.adb rident.ads scng.adb sfn_scan.adb \
sinfo-cn.adb sinput-c.adb sinput-p.adb style.adb styleg.adb stylesw.adb \
switch.adb switch-m.adb targparm.adb tempdir.adb restrict.adb

# Source files generated in build/gcc/ada, not src/gcc/ada.
GENERATED_SOURCES := sdefault.adb

SOURCES := $(PRJ_SOURCES) $(GENERATED_SOURCES)

OBJECTS := $(patsubst %.ads,%.o,$(SOURCES:.adb=.o))

# Add some object files compiled from C sources.  prefix.o requires
# some objects from libiberty.
OBJECTS += link.o libcommon-target.a libcommon.a libcpp.a libiberty.a
#       i386-common.o hooks.o diagnostic.o common-targhooks.o pretty-print.o \
#       line-map.o macro.o

vpath %.c $(srcdir)/../gcc/ada

libgnatprj.so.$(LIB_VERSION): $(addprefix obj-shared/,$(OBJECTS))
	: # Make libgnatprj.so
	$(GCC) -o $@ -shared -fPIC -Wl,--soname,$@ $^ \
	   -L../gcc/ada/rts -lgnat-$(LIB_VERSION) \
	   -L../libgnatvsn -lgnatvsn
	$(LN_S) -f libgnatprj.so.$(LIB_VERSION) libgnatprj.so
	chmod a=r obj-shared/*.ali
# Make the .ali files, but not the .o files, visible to the gnat tools.
	cp -lp obj-shared/*.ali .

$(addprefix obj-shared/,$(OBJECTS)): | stamp-libgnatprj-sources obj-shared

obj-shared/%.o: %.adb
	$(GCC) -c -fPIC $(ADAFLAGS) $(LIBGNAT_JUST_BUILT) $(LIBGNATVSN) $< -o $@

obj-shared/%.o: %.ads
	$(GCC) -c -fPIC $(ADAFLAGS) $(LIBGNAT_JUST_BUILT) $(LIBGNATVSN) $< -o $@

obj-shared/%.o: %.c
	$(GCC) -c -fPIC $(CFLAGS) -I$(srcdir)/../gcc $< -o $@

obj-shared/prefix.o: ../gcc/prefix.o
	cp $< $@

obj-shared/libcommon-target.a: ../gcc/libcommon-target.a
	cp $< $@

obj-shared/libcommon.a: ../gcc/libcommon.a
	cp $< $@

obj-shared/libcpp.a: ../libcpp/libcpp.a
	cp $< $@

obj-shared/libiberty.a: ../libiberty/libiberty.a
	cp $< $@

obj-shared/i386-common.o: ../gcc/i386-common.o
	cp $< $@

obj-shared/hooks.o: ../gcc/hooks.o
	cp $< $@

obj-shared/diagnostic.o: ../gcc/diagnostic.o
	cp $< $@

obj-shared/common-targhooks.o: ../gcc/common/common-targhooks.o
	cp $< $@

obj-shared/pretty-print.o: ../gcc/pretty-print.o
	cp $< $@

obj-shared/line-map.o: ../libcpp/line-map.o
	cp $< $@

obj-shared/macro.o: ../libcpp/macro.o
	cp $< $@

obj-shared/%.o: ../libiberty/%.o
	cp $< $@

obj-shared:
	-mkdir $@

libgnatprj.a: $(addprefix obj-shared/,$(OBJECTS))
	: # Make libgnatprj.a
	ar rc $@ $^
	ranlib $@

$(addprefix obj-static/,$(OBJECTS)): | stamp-libgnatprj-sources obj-static

obj-static/%.o: %.adb
	$(GCC) -c $(ADAFLAGS) $(LIBGNAT_JUST_BUILT) $(LIBGNATVSN) $< -o $@

obj-static/%.o: %.ads
	$(GCC) -c $(ADAFLAGS) $(LIBGNAT_JUST_BUILT) $(LIBGNATVSN) $< -o $@

obj-static/%.o: %.c
	$(GCC) -c $(CFLAGS) -I$(srcdir)/../gcc $< -o $@

obj-static/prefix.o: $(srcdir)/../gcc/prefix.c
	$(GCC) -c $(CFLAGS) -DPREFIX=\"${prefix}\" -DBASEVER=\"$(BASEVER)\" \
	   -I$(srcdir)/../gcc -I$(srcdir)/../include -I../gcc -I../libiberty \
	   $< -o $@

obj-static/%.o: $(srcdir)/../libiberty/%.c
	$(GCC) -c -fPIC $(CFLAGS) \
	   -I$(srcdir)/../libiberty -I$(srcdir)/../include $< -o $@

obj-static:
	-mkdir $@

$(SOURCES): stamp-libgnatprj-sources

stamp-libgnatprj-sources:
	for file in $(PRJ_SOURCES); do \
	   ads=$$(echo $$file | sed 's/\.adb/.ads/'); \
	   if [ -f $(srcdir)/../gcc/ada/$$file -a ! -L $$file ] ; then $(LN_S) $(srcdir)/../gcc/ada/$$file .; fi; \
	   if [ -f $(srcdir)/../gcc/ada/$$ads -a ! -L $$ads ] ; then $(LN_S) $(srcdir)/../gcc/ada/$$ads .; fi; \
	done
	for file in $(GENERATED_SOURCES); do \
	   ads=$$(echo $$file | sed 's/\.adb/.ads/'); \
	   if [ -f ../gcc/ada/$$file -a ! -L $$file ] ; then $(LN_S) ../gcc/ada/$$file .; fi; \
	   if [ -f ../gcc/ada/$$ads -a ! -L $$ads ] ; then $(LN_S) ../gcc/ada/$$ads .; \
	   else \
	      if [ -f $(srcdir)/../gcc/ada/$$ads -a ! -L $$ads ] ; then $(LN_S) $(srcdir)/../gcc/ada/$$ads .; fi; \
	   fi; \
	done
	$(foreach PAIR,$(TOOLS_TARGET_PAIRS), \
	          rm -f $(word 1,$(subst <, ,$(PAIR)));\
	          $(LN_S) $(srcdir)/../gcc/ada/$(word 2,$(subst <, ,$(PAIR))) \
	                  $(word 1,$(subst <, ,$(PAIR)));)
	touch $@

# Generate a list of source files (.ads and .adb) to install.  Almost
# all of them are in src/gcc/ada, but some are generated during build
# and are in build/gcc/ada.
BODIES := $(filter %.adb,$(PRJ_SOURCES))
SPECS := $(filter %.ads,$(PRJ_SOURCES)) $(patsubst %.adb,%.ads,$(BODIES) $(GENERATED_SOURCES))
SOURCES_TO_INSTALL := \
$(addprefix  $(srcdir)/../gcc/ada/,$(SPECS) $(BODIES)) \
$(addprefix ../gcc/ada/,$(GENERATED_SOURCES))

install: libgnatprj
	if [ ! -a $(DESTDIR)$(libdir) ] ; then \
		mkdir -p $(DESTDIR)$(libdir) ; \
	fi
	$(INSTALL_DATA) libgnatprj.a $(DESTDIR)$(libdir)
	$(INSTALL_DATA) libgnatprj.so.$(LIB_VERSION) $(DESTDIR)$(libdir)
	cd $(DESTDIR)$(libdir); ln -sf libgnatprj.so.$(LIB_VERSION) libgnatprj.so
	mkdir -p $(DESTDIR)$(includedir)/gnatprj
	$(INSTALL_DATA) $(SOURCES_TO_INSTALL) \
	   $(DESTDIR)$(includedir)/gnatprj
	mkdir -p $(DESTDIR)$(libdir)/gnatprj
	$(INSTALL) -m 0444 obj-shared/*.ali \
	   $(DESTDIR)$(libdir)/gnatprj
	chmod a=r $(DESTDIR)$(libdir)/gnatprj/*.ali

.PHONY: clean
clean:
	rm -rf *.ali obj-static obj-shared libgnatprj* *.adb *.ads stamp*

