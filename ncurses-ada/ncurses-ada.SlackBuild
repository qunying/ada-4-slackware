#!/bin/bash

# Copyright 2021 Zhu Qun-Ying
# Copyright 2000-2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=ncurses-ada
SRCNAM=ncurses
VERSION=${VERSION:-$(echo $SRCNAM-*.tar.?z | cut -f 2- -d - | cut -f 1,2 -d .)}
BUILD=${BUILD:-1}
TAG=${TAG:-_sAda}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$(echo $VERSION | tr - _)-$ARCH-$BUILD.txz"
  exit 0
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

TMP=${TMP:-/tmp/slackAda}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  X86_64OPTS=" --with-chtype=long --with-mmask-t=long "
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

ncurses_configure() {
CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --enable-colorfgbg \
  --enable-hard-tabs \
  --enable-overwrite \
  --enable-xmc-glitch \
  --with-cxx-shared \
  --with-ospeed=unsigned \
  --with-termlib=tinfo \
  --with-ticlib=tic \
  --with-gpm \
  --with-shared \
  --without-debug \
  --disable-static \
  --without-normal \
  --without-profile \
  --enable-symlinks \
  --enable-pc-files \
  --with-pkg-config-libdir=/usr/lib${LIBDIRSUFFIX}/pkgconfig \
  $ADA_SUPPORT \
  $X86_64OPTS \
  --program-suffix="" \
  --program-prefix="" \
  $WIDEC \
  --build=$ARCH-slackware-linux
}

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf ncurses-$VERSION
tar xvf $CWD/ncurses-$VERSION.tar.?z || exit 1
cd ncurses-$VERSION || exit 1
chown -R root:root .

## NOTE: nevermind trying this... patches have multiple failures. Use the
## dated archive from upstream instead.
#
### No rollup (*.patch.sh) patch available yet for ncurses-6.1, so we'll
### comment this out for now.
## Apply upstream patch collection:
#xzcat $CWD/ncurses-6.0-20160910-patch.sh.xz > ncurses-6.0-20160910-patch.sh
#sh ncurses-6.0-20160910-patch.sh
## Apply weekly ncurses patch updates:
#for file in $CWD/patches/*.patch.gz ; do
#  zcat $file | patch -p1 --verbose || exit 1
#done

zcat $CWD/ncurses.mkhashsize.diff.gz | patch -p1 --verbose || exit 1

#WIDEC=--disable-widec
#ADA_SUPPORT="--with-ada-include=/usr/include/ncurses-ada \
# --with-ada-objects=/usr/lib$LIBDIRSUFFIX/ncurses-ada"
#ncurses_configure || exit 1
#make $NUMJOBS || exit 1
#make install DESTDIR=$PKG || exit 1

# Configure/build/install again with wide character support:
make clean
WIDEC=--enable-widec
ADA_SUPPORT="--with-ada-include=/usr/include/ncursesw-ada \
 --with-ada-objects=/usr/lib$LIBDIRSUFFIX/ncursesw-ada"
ncurses_configure || exit 1
make $NUMJOBS || exit 1
make install DESTDIR=$PKG || exit 1

# remove all non ada files
# Remove all C libs
( cd $PKG/usr/lib$LIBDIRSUFFIX
  rm lib*
  rm -rf pkgconfig)
# Remove all C headers
( cd $PKG/usr/include
  rm *.h
)
rm -rf $PKG/usr/man
rm -rf $PKG/usr/share
(cd $PKG/usr/bin/
ls | grep -v ada | xargs rm)

# Then, add /usr/doc/ncurses-xxxxx with appropriate files.
mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a doc/html $PKG/usr/doc/$PKGNAM-$VERSION
cp -a Ada95/samples $PKG/usr/doc/$PKGNAM-$VERSION
(cd  $PKG/usr/doc/$PKGNAM-$VERSION/samples; rm *.ali *.o)

#Copy Ada project files
mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/gnat
sed "s/%lib_dir%/lib$LIBDIRSUFFIX/" $CWD/ncurses.gpr > $PKG/usr/share/gpr/ncurses.gpr
sed "s/%lib_dir%/lib$LIBDIRSUFFIX/" $CWD/ncursesw.gpr > $PKG/usr/share/gpr/ncursesw.gpr

# desc file:
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$(echo $VERSION | tr - _)-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

